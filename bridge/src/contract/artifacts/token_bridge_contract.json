{
  "name": "TokenBridge",
  "functions": [
    {
      "name": "_assert_token_is_same",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "token",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_call_mint_on_token",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_initialize",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "claim_private",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_redeeming_minted_notes",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "canceller",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "msg_key",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_for_L1_to_L2_message_consumption",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "claim_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "to",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "canceller",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "msg_key",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "exit_to_l1_private",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "recipient",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "callerOnL1",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "H4sIAAAAAAAA/+2dCbhN1RvG9znHRaI0mZN5lrPvve5QEQ0aqEQRJa7rXvM8y1QplagUpUyl0ECpFAlNNNJEozQiKlEJCf+18p2/fbdLOO/a9nvb53m+59trO9Z9v2+tvfb+7f2dc6YWsKxXC1r/vELKwsryyXasneBq55dt5yvWbiA+KZqSnJyVmphlJ9kZ0cT09ml1o8l126ek2Wl23bS6HRLTkpKy0pLTUtPbp6dG0+3kpCw7u256UnZ036u0o69onC+TOsuQ6DydRGdZEp1nkOgsR6KzPInOCiQ6K5LorESiszKJziokOquS6KxGorM6ic4aJDprkuisRaKzNonOM0l01iHRGSXRaZPoTCTRmUSiM5lEZ12gTq1N38MpJ/0VU7ZHWXHxJcSXFF9KfGnxZcSfLr6s+DPElxNfXnwF8RXFVxJfWXwV8VXFVxNfXXwN8TXF1xJfW/yZ4uuIj4q3xSeKTxKfLL6uo78UZanWvntd+hUWH9tvcmzTLI45mE6i8ywSnWeT6DyHRGc9Ep31SXSeS6KzAYnOhiQ6zyPReT6JzgtIdF5IorORhb8WLir96es9fU2YJj5d/FnizxZ/jvh64uuLP1d8A/ENxZ8n/nzxF4i/UHwja/+16EXKLrb2P3eNXYvG9oetnM9f3fmNxveyS+D6+uf5k35douxSZY2VNVF2mbLLlV2hrKmyK5U1U9Zc2VXKrlbWQllLZdcoa6WstbJrlV2nrI2y65W1VdZOWYay9soylXVQlqUsW1lHZZ0kSbFcai0Frf3tS13txq52E1f7Mlf7clf7Cle7qat9pavdzNVu7mpf5Wpf7Wq3cLVbutrXuNqtXO3Wrva1rvZ1rnYbV/t6V7utq93O1c5wtdu72pmudgdXO8vVzna1O7ranaTtfEXENxAfje+V45iJd327BNjX4/nNrOnu/B2tzqxs/Yral4L60mPRGJi/J3yfv3+6tpvE31eixGxfBszfk37OX/L/ddqXx9dX1BGzfQUwf0/5NX+JOXTaTY++r6grZvtKYP7m+DB/KdkH6LSbHV1fabnEbDcH5m+u3/KXlqtO+6oj7yv1IDHbVwPz97Sf8pd6UJ12iyPrK/EQMdstgfl7xi/5Sz2kTvuaw+8r819itlsB8zfPD/lL/VedduvD6yt6GDHb1wLz9+yxzl/0sHTa1/17X3UPM2a7DTB/zx3L/CUftk77+kP2lZx9BDHbbYH5e/5Y5S/1iHTa7Q7eV9oRxmxnAPM3/xjkLz37iHXa7XPvK3oUMduZwPy94HX+okel0+5wYF/2UcZsZwHz96KX+etw1Drt7Jx9JcURs90RmL8FHuUvMTsunXYnC3cv0XnPLt78LfQof9H4XjbwPpv9JDB/L5HkD3ifyJ4DzN8ikvwB73PYTwPz9zJJ/oCcbs8D5m8xSf6AnGk/B8zfEpL8ATnJng/M31KS/AGv8+0Xgfl7hSR/wOtUeyEwf6+S5A94nWUvAubvNZL8Aa8T7MXA/L1Okj/gec5eCszfGyT5A67T9qvA/C0jyR9wnbFfB+ZvOUn+gMeJDZwzNjJ/uh5U17OVk/70PSd9ry3b2lcTp++B6nu/+l6yvofeztpXi6efbehnOvoZkX42pp+16WeM+pmlflarn/3qZ976GbquHdC1CLoGQ9d06FoWXRuja4J0jZGurdK1WpdY5utQi+H6+n8damdlXZR1VdZNWXdlPZT1VNZLWW9lfZT1VdZPWX9lA5QNVDZI2WBlQ5TdoGyosmHKhisboWykshuV3aTsZmWjlN2i7FZlo5XdJkmK1SVqLc46xS6udldXu5ur3d3V7uFq93S1e7navV3tPq52X1e7n6vd39Ue4GoPdLUHudqDXe0hrvYNrvZQV3uYqz3c1R7hao90tW90tW9ytW92tUe52re42re62qNd7dss83WozmMm3rW/M7CvdSR1qF1Afemx6ArM33qSOtRu8ff1/zrU7sD8bSCpQ+0RX1856lB7AvP3I0kdaq+j7+uAOtTewPxtJKlD7XN0feVah9oXmL9NJHWo/Y68r4PWofYH5u8nkjrUAUfW1yHrUAcC8/czSR3qoMPv61/rUAcD8/cLSR3qkMPr67DqUG8A5m8zSR3q0H/v67DrUIcB8/crSR3q8EP2dWR1qCOA+dtCUoc68uB9HXEd6o3A/G0lqUO9Kfe+jqoO9WZg/n4jqUMddWBfR12Hegswf7+T1KHemrOvuOpQRwPz9wdJHeptFu5e4jrgc6RtJM+RgPfZ7A3A/P1Jkj/gfSJ7IzB/20nyB7zPYf8EzN8OkvwBOd3+BZi/nST5A3Km/Sswf3+R5A/ISfZWYP52keQPeJ1v/w7M398k+QNep9rbgPnbTZI/4HWWvR2Yvz0k+QNeJ9g7gfnbS5I/4HnO3gXMn1WAI3/AddreDcxfiCR/wHXG3gvMX5gkf8DjxAbOGRuZvwTJWznpT99z0vfa9L07fc9S3wPV9371vWR9D32kta8WTz/b0M909DMi/WxMP2vTzxj1M0v9rFY/+9XPvPUzdF07oGsRdA2GrunQtSy6NkbXBOkaI11bpWu1dI2arq0zWYdaEtfX/+tQb1d2h7Ixyu5UNlbZOGV3Kbtb2T3Kxiu7V9l9yiYom6jsfmUPKJuk7EFlDymbrGyKsqnKpimbruxhZY8om6HsUWWPKZupbJay2ZKkWF2i1uKsU7zD1R7jat/pao91tce52ne52ne72ve42uNd7Xtd7ftc7Qmu9kRX+35X+wFXe5Kr/aCr/ZCrPdnVnuJqT3W1p7na013th13tR1ztGa72o672Y672TFd7lqs92zJfh+o8ZuJd+28H9lXeo/NIvHWod4D60mMxBpi/Cr7P3z9d23fG39f/61DHAvNX0c/5c9Shjouvrxx1qHcB81fJr/lz1aHeffR9HVCHeg8wf5V9mL/c6lDHH11fudah3gvMXxW/5e8gdaj3HXlfB61DnQDMX1U/5e8QdagTj6yvQ9ah3g/MXzW/5O9f6lAfOPy+/rUOdRIwf9X9kL/DqEN98PD6Oqw61IeA+atxrPN3mHWok/+9r8OuQ50CzF/NY5m/I6hDnXrIvo6sDnUaMH+1jlX+jrAOdfrB+zriOtSHgfmrfQzydzR1qI/k3tdR1aHOAObvTK/zd5R1qI8e2NdR16E+BsxfHS/zF0cd6sycfcVVhzoLmL+oR/mLtw51toW7l+i8Zxdv/myS50jA+2x2RWD+EknyB7xPZFcG5i+JJH/A+xx2VWD+kknyB+R0uzowf3VJ8gfkTLsmMH8pJPkDcpJdG5i/VJL8Aa/z7TrA/KWR5A94nWrbwPylk+QPeJ1lJwHzdxZJ/oDXCXZdYP7OJskf8DxnpwLzdw5J/oDrtJ0OzF89kvwB1xn7bGD+6pPkD3ic2MA5YyPzp+tQ81n761D1PadZ1r76N33PUt8D1fd+9b1kfQ99urWvFk8/29DPdPQzIv1sTD9r088Y9TNL/axWP/vVz7z1M3RdO6BrEXQNhq7p0LUsujZG1wTpGiNdW6VrtW63cr7cNajxzrvHj76vA+pJIlbOetmDaY7G97Ifx/UVdep9wrGdT3zYsS92LOU3EJPl+jvuPJ6Qyz7oHzcxSE8Y6PdJCzf5TcX9JH6McizqJnMajfMVsfYfKLm9MH8nMQrs23bvMKc7ajsXlKfEz3HsO0582Nq/+OQXH3LkVi9Qex3/L+TwIUcfex3/J7f3hA7Sz3GOfbH/f4JDi4XLSdTAgho1umDGKt71AC6x9lfAz3H8DcsxCM6/He+i9RSwr7mHyMmR9u3V2X+uZebs/7RjOzj7x9nnXEkout9nLH+f/XXcz+DHKFet8cY/R7Si+23jU5R160TOpXm4sbaR+YudmLS+hlbOV5wnpgPwD3limgPLZ+Ihr5zj1fksMH9enUCftcycQJ9zbAcn0Dj7fFYSiu73ecvfJ1Ad9/P4MTKKz88DdR4Mn02c/I9Ss0lcPmYoPl/8C459R4Li51kHjpUbxc+z/h3Fc+snQPGDv/6P4vMdydTtF6wDURz1YeDcDqJ4z/7zgbpesMwcgOhFaL7lzQIfr84XgTrzWTmviiyX1micr4PlIBrfy0bmwJTGBZaZ+QSfUAst3MLhFTYsxPWVAxtecmwH2BBnnwsloeh+F1n+xgYd9yL8GBnFhkVAncFTt0P/LeeC8rL4xY59wVM3TJ+eXOrrAXQ+dVtsmX/q9jKwryUW31O3JZaZs/9Sx3Zw9o+zzyWSUHS/r1j+PvvruF/Bj5GRp26LRSu637YkT91eAcb8Km6s7bYGnrppfQ2tnK84T0wH4B/yxLQYlk+zT91eA+bPqxPoa5aZE+jrju3gBBpnn69JQtH9vmH5+wSq434DP0ZG8fkNoE6vnrrFscDmyaduy8Qvd+wLnrph+vQExZdZOZ+6LbfMP3VbbOHO/suAupZbZg5A9CK0zPJmgY9X55tAnfms3Bd4dB7QJzlkDkxpfMsyM5/gE+ptC7dweIUNb+P6yoEN7zi2A2yIs8+3JaHoft+1/I0NOu538WNkFBveBeoMnrod+m85F5T3xK9w7AueumH69ORSXw+g86nbCsv8U7f3gH2ttPieuq20zJz933dsB2f/OPtcKQlF9/uB5e+zv477A/wYGXnqtkK0ovvNIHnqhpxLH+LG2s4w8NRN62to5XzFeWI6AP+QJ6YVsHyafer2ETB/Xp1AP7LMnEA/dmwHJ9A4+/xIEorud5Xl7xOojnsVfoyM4vMqoE6vnrrFscDmyaduq8V/4tgXPHXD9OkJiq+2cj51+8Qy/9RthYU7+68G6vrEMnMAoheh1ZY3C3y8Oj8F6tSLRT7rwBc6D+iTHDIHpjR+ZpmZT/AJ9bmFWzi8wobPcX3lwIYvHNsBNsTZ5+eSUHS/X1r+xgYd95f4MTKKDV8CdRJ+RYadi1w6bFgj/ivHvgAbMH16gg1rrJzY8JVlHhuQX5GxBqjrK8vMwY1ehNZY3izw8epcC5yvrF+RsZZA49eWmfkEn1DfWLiFwyts+AbXVw5s+NaxHWBDnH1+IwlF9/ud5W9s0HF/hx8jo9jgzGk0zhfhZ3zyBDZ8L/4Hx74AGzB9eoIN31s5seEHyzw2ID/j8z1Q1w+WmYMbvQh9b3mzwMercx1wvrJ+xmcdgcb1lpn5BJ9QGyzcwuEVNmzA9ZUDG350bAfYEGefGySh6H43Wv7GBh33RvwYGcWGjUCdhEVKeQIbNon/ybEvwAZMn55gwyYrJzb8ZJnHBmSR0iagrp8sMwc3ehHaZHmzwMer82fgfGUtUvqZQOMvlpn5BJ9Qmy3cwuEVNmzG9ZUDG351bAfYEGefmyWh6H63WP7GBh33FvwYGcWGLUCdhEVKibnIpcOGreJ/c+wLsAHTpyfYsNXKiQ2/WeaxAVmktBWo6zfLzMGNXoS2Wt4s8PHq/B2nM5G1SOl3Ao1/WGbmE3xCbbNwC4dX2LAN11cObPjTsR1gQ5x9bpOEovvdbvkbG3Tc2/FjZBQbtgN1EhYp5Qls2CF+p2NfgA2YPj3Bhh1WTmzYaZnHBmSR0g6grp2WmYMbvQjtsLxZ4OPV+RdOZyJrkdJfBBp3WWbmE3xC/W3hFg6vsOFvXF85sGG3YzvAhjj7/FsSiu53j+VvbNBx78GPkVFs2APUSViklCewYa870VaADag+PcGGvVZObNAbDVx/089FSnuBupyxR4/s5Sk27LW8WeDj1RkKwXQmshYpAXNgTGM4ZGY+wSdUJMSHDRFgcp168zkaATbE2aceJJ1QdL8JIeDZyVDcCSH4GBnFhgTgAUVYpJSUi1w6bMgvCS4QYAMnNuQP5cSGAh5gA7JIKT9wYS4QMnNwoxeh/CFvFvh4dRbE6UxiLVIqGPK/xuNYsKEQITYUMoQNxwfYgB2k4w1gQ2GfY4OOuzAZNhQmxAZgkVKewIYikuATAmzgxIYiLmw4wQNsQBYpFQEuzCeQYEMREmw4EYwNjEVKJ4b8r7EoCzacRIgNJxnChpMDbMAO0skGsOEUn2ODjvsUMmw4hRAbgEVKeQIbTpUEnxZgAyc2nOrChtM8wAZkkdKpwIX5NBJsOJUEG4qBsYGxSKlYyP8ai7NgQwlCbChhCBtKBtiAHaSSBrChlM+xQcddigwbShFiA7BIKTkXuXTYUFoSXCbABk5sKO3ChjIeYAOySKk0cGEuEzJzcKMXodIk2HA6Tmcya5HS6SH/ayzLgg1nEGLDGYawoVyADdhBKmcAG8r7HBt03OXJsKE8ITYAi5TyBDZUkARXDLCBExsquLChogfYgCxSqgBcmCuSYEMFEmyoBMYGxiKlSiH/a6zMgg1VCLGhiiFsqBpgA3aQqhrAhmo+xwYddzUybKhGiA3AIqU8gQ3VJcE1AmzgxIbqLmyo4QE2IIuUqgMX5hok2FCdBBtqgrGBsUipZsj/GmuxYENtQmyobQgbzgywATtIZxrAhjo+xwYddx0ybKhDiA3AIqW6ucilw4bYSmYH2MCJDVEXNtgeYAOySCkKXJjtkJmDG70IRUmwIRGnsy5rkVJiyP8ak1iwIZkQG5INYUPdABuwg1TXADak+BwbdNwpZNiQQogNwCKlPIENqZLgtAAbOLEh1YUNaR5gA7JIKRW4MKeRYEMqCTakg7GBsUgpPeR/jWexYMPZhNhwtiFsOCfABuwgnWMAG+r5HBt03PXIsKEeITYAi5TyBDbUlwSfG2ADJzbUd2HDuR5gA7JIqT5wYT6XBBvqk2BDAzA2MBYpNQj5X2NDFmw4jxAbzjOEDecH2IAdpPMNYMMFPscGHfcFZNhwASE2AIuUUnKRS4cNF0qCGwXYwIkNF7qwoZEH2IAsUroQuDA3Cpk5uNGL0IUk2HARTmcKa5HSRSH/a7yYBRsuIcSGSwxhw6UBNmAH6VID2NDY59ig425Mhg2NCbEBWKSUJ7ChiST4sgAbOLGhiQsbLvMAG5BFSk2AC/NlJNjQhAQbLgdjA2OR0uUh/2u8ggUbmhJiQ1ND2HBlgA3YQbrSADY08zk26LibkWFDM0JsABYp5QlsaC4JvirABk5saO7Chqs8wAZkkVJz4MJ8FQk2NCfBhqvB2MBYpHR1yP8aW7BgQ0tCbGhpCBuuCbABO0jXGMCGVj7HBh13KzJsaEWIDcAipdRc5NJhQ2tJ8LUBNnBiQ2sXNlzrATYgi5RaAxfma0NmDm70ItSaBBuuw+lMZS1Sui7kf41tWLDhekJsuN4QNrQNsAE7SG0NYEM7n2ODjrsdGTa0I8QGYJFSnsCGDElw+wAbOLEhw4UN7T3ABmSRUgZwYW5Pgg0ZJNiQCcYGxiKlzJD/NXZgwYYsQmzIMoQN2QE2YAcp2wA2dPQ5Nui4O5JhQ0dCbAAWKeUJbOgkCe4cYAMnNnRyYUNnD7ABWaTUCbgwdybBhk4k2NAFjA2MRUpdQv7X2JUFG7oRYkM3Q9jQPcAG7CB1N4ANPXyODTruHmTY0IMQG4BFSmm5yKXDhp6S4F4BNnBiQ08XNvTyABuQRUo9gQtzr5CZgxu9CPUkwYbeOJ1prEVKvUP+19iHBRv6EmJDX0PY0C/ABuwg9TOADf19jg067v5k2NCfEBuARUp5AhsGSIIHBtjAiQ0DXNgw0ANsQBYpDQAuzANJsGEACTYMAmMDY5HSoJD/NQ5mwYYhhNgwxBA23BBgA3aQbjCADUN9jg067qFk2DCUEBuARUp5AhuGSYKHB9jAiQ3DXNgw3ANsQBYpDQMuzMNJsGEYCTaMAGMDY5HSiJD/NY5kwYYbCbHhRkPYcFOADdhBuskANtzsc2zQcd9Mhg03E2IDsEgpPRe5dNgwShJ8S4ANnNgwyoUNt3iADcgipVHAhfmWkJmDG70IjSLBhltxOtNZi5RuDflf42gWbLiNEBtuM4QNtwfYgB2k2w1gwx0+xwYd9x1k2HAHITYAi5TyBDaMkQTfGWADJzaMcWHDnR5gA7JIaQxwYb6TBBvGkGDDWDA2MBYpjQ35X+M4Fmy4ixAb7jKEDXcH2IAdpLsNYMM9PscGHfc9ZNhwDyE2AIuU8gQ2jJcE3xtgAyc2jHdhw70eYAOySGk8cGG+lwQbxpNgw31gbGAsUrov5H+NE1iwYSIhNkw0hA33B9iAHaT7DWDDAz7HBh33A2TY8AAhNgCLlDJykUuHDZMkwQ8G2MCJDZNc2PCgB9iALFKaBFyYHwyZObjRi9AkEmx4CKczg7VI6aGQ/zVOZsGGKYTYMMUQNkwNsAE7SFMNYMM0n2ODjnsaGTZMI8QGYJFSnsCG6ZLghwNs4MSG6S5seNgDbEAWKU0HLswPk2DDdBJseASMDYxFSo+E/K9xBgs2PEqIDY8awobHAmzADtJjBrBhps+xQcc9kwwbZhJiA7BIKU9gwyxJ8OwAGzixYZYLG2Z7gA3IIqVZwIV5Ngk2zCLBhsfB2MBYpPR4yP8an2DBhicJseFJQ9jwVIAN2EF6ygA2zPE5Nui455BhwxxCbAAWKbXPRS4dNsyVBD8dYAMnNsx1YcPTHmADskhpLnBhfjpk5uBGL0JzSbDhGZzO9qxFSs+E/K9xHgs2PEuIDc8awobnAmzADtJzBrDheZ9jg477eTJseJ4QG4BFSnkCG+ZLgl8IsIETG+a7sOEFD7ABWaQ0H7gwv0CCDfNJsOFFMDYwFim9GPK/xgUs2LCQEBsWGsKGlwJswA7SSwawYZHPsUHHvYgMGxYRYgOwSClPYMPLkuDFATZwYsPLLmxY7AE2IIuUXgYuzItJsOFlEmxYAsYGxiKlJSH/a1zKgg2vEGLDK4aw4dUAG7CD9KoBbHjN59ig436NDBteI8QGYJFSZi5y6bDhdUnwGwE2cGLD6y5seMMDbEAWKb0OXJjfCJk5uNGL0Osk2LAMpzOTtUhpWcj/GpezYMObhNjwpiFseCvABuwgvWUAG972OTbouN8mw4a3CbEBWKSUJ7DhHUnwuwE2cGLDOy5seNcDbEAWKb0DXJjfJcGGd0iw4T0wNjAWKb0X8r/GFSzYsJIQG1Yawob3A2zADtL7BrDhA59jg477AzJs+IAQG4BFSnkCGz6UBH8UYAMnNnzowoaPPMAGZJHSh8CF+SMSbPiQBBs+BmMDY5HSxyH/a1zFgg2rCbFhtSFs+CTABuwgfWIAGz71OTbouD8lw4ZPCbEBWKTUIRe5dNjwmST48wAbOLHhMxc2fO4BNiCLlD4DLsyfh8wc3OhF6DMSbPgCp7MDa5HSFyH/a/ySBRvWEGLDGkPY8FWADdhB+soANqz1OTbouNeSYcNaQmwAFinlCWz4WhL8TYANnNjwtQsbvvEAG5BFSl8DF+ZvSLDhaxJs+BaMDYxFSt+G/K/xOxZs+J4QG743hA0/BNiAHaQfDGDDOp9jg457HRk2rCPEBmCRUp7AhvWS4A0BNnBiw3oXNmzwABuQRUrrgQvzBhJsWE+CDT+CsYGxSOnHkP81bmTBhk2E2LDJEDb8FGADdpB+MoANP/scG3TcP5Nhw8+E2AAsUsrKRS4dNvwiCd4cYAMnNvziwobNHmADskjpF+DCvDlk5uBGL0K/kGDDrzidWaxFSr+G/K9xCws2bCXEhq2GsOG3ABuwg/SbAWz43efYoOP+nQwbfifEBmCRUp7Ahj8kwdsCbODEhj9c2LDNA2xAFin9AVyYt5Fgwx8k2PAnGBsYi5T+DPlf43YWbNhBiA07DGHDzgAbsIO00wA2/OVzbNBx/0WGDX8RYgOwSClPYMMuSfDfATZwYsMuFzb87QE2IIuUdgEX5r9JsGEXCTbsBmMDY5HS7pD/Ne5hwYa9hNiw1xA2OBkhwIY4+9wrpz90v6Gwv7FBxx0Kw8fIKDY4cxqN80VYpJSdi1w6bAhLI+LYGWADpk9PsCEczokNkbB5bEAWKYWBC3MkbObgRi9C4bA3C3y8OvPhdGazFinlC/tfY4Kh+QSfUPnDuIXDK2zID0yuU2+BABuwg1TAADYU9Dk26LgLkmFDQUJsABYp5QlsOE4ahQJs4MSG41zYUMgDbEAWKR0HXJgLkWDDcSTYcDwYGxiLlI4P+19jYRZsKEKIDUUMYcMJATZgB+kEA9hwos+xQcd9Ihk2nEiIDcAipTyBDUWlcVKADZzYUNSFDSd5gA3IIqWiwIX5JBJsKEqCDSeDsYGxSOnksP81nsKCDacSYsOphrDhtAAbsIN0mgFsKOZzbNBxFyPDhmKE2IArUrKRl/bHDBuKS6NEgA2c2FDchQ0lPMAGZJFSceDCXCJs5uBGL0LFSbChJEynHWUtUioZ9r/GUizYUJoQG0obwoYyATZgB6mMAWw43efYoOM+nQwbTifEBlyRUt7AhrLSOCPABk5sKOvChjM8wAZkkVJZ4MJ8Bgk2lCXBhnJgbGAsUioX9r/G8izYUIEQGyoYwoaKATZgB6miAWyo5HNs0HFXIsOGSoTYgCtSyhvYUFkaVQJs4MSGyi5sqOIBNiCLlCoDF+YqJNhQmQQbqoKxgbFIqWrY/xqrsWBDdUJsqG4IG2oE2IAdpBoGsKGmz7FBx12TDBtqEmIDsEjJzkUuqG/vsKGWNGoH2MCJDbVc2FDbA2xAFinVAi7MtcNmDm70IlSLBBvOxGGDzVqkdGbY/xrrsGBDlBAbooawwQ6wATtItgFsSPQ5Nui4E8mwIZEQG4BFSnkCG5KkkRxgAyc2JLmwIdkDbEAWKSUBF+ZkEmxIIsGGumBsYCxSqhv2v8YUFmxIJcSGVEPYkBZgA3aQ0gxgQ7rPsUHHnU6GDemE2AAsUsoT2HCWNM4OsIETG85yYcPZHmADskjpLODCfDYJNpxFgg3ngLGBsUjpnLD/NdZjwYb6hNhQ3xA2nBtgA3aQzjWADQ18jg3/TE4ybGhAiA3AIqXEXOSC+vYOGxpK47wAGzixoaELG87zABuQRUoNgQvzeWEzBzd6EWpIgg3n47AhkbVI6fyw/zVewIINFxJiw4WGsKFRgA3YQWpkABsu8jk26LgvIsOGiwixAViklCew4WJpXBJgAyc2XOzChks8wAZkkdLFwIX5EhJsuJgEGy4FYwNjkdKlYf9rbMyCDU0IsaGJIWy4LMAG7CBdZgAbLvc5Nui4LyfDhssJsQFYpJQnsOEKaTQNsIETG65wYUNTD7ABWaR0BXBhbkqCDVeQYMOVYGxgLFK6Mux/jc1YsKE5ITY0N4QNVwXYgB2kqwxgw9U+xwYd99Vk2HA1ITYAi5SScpEL6ts7bGghjZYBNnBiQwsXNrT0ABuQRUotgAtzy7CZgxu9CLUgwYZrcNiQxFqkdE3Y/xpbsWBDa0JsaG0IG64NsAE7SNcawIbrfI4NOu7ryLDhOkJsABYp5QlsaCON6wNs4MSGNi5suN4DbEAWKbUBLszXk2BDGxJsaAvGBsYipbZh/2tsx4INGYTYkGEIG9oH2IAdpPYGsCHT59ig484kw4ZMQmwAFinlCWzoII2sABs4saGDCxuyPMAGZJFSB+DCnEWCDR1IsCEbjA2MRUrZYf9r7MiCDZ0IsaGTIWzoHGADdpA6G8CGLj7HBh13FzJs6EKIDcAipeRc5IL69g4bukqjW4ANnNjQ1YUN3TzABmSRUlfgwtwtbObgRi9CXUmwoTsOG5JZi5S6h/2vsQcLNvQkxIaehrChV4AN2EHqZQAbevscG3TcvcmwoTchNgCLlPIENvSRRt8AGzixoY8LG/p6gA3IIqU+wIW5Lwk29CHBhn5gbGAsUuoX9r/G/izYMIAQGwYYwoaBATZgB2mgAWwY5HNs0HEPIsOGQYTYACxSyhPYMFgaQwJs4MSGwS5sGOIBNiCLlAYDF+YhJNgwmAQbbgBjA2OR0g1h/2scyoINwwixYZghbBgeYAN2kIYbwIYRPscGHfcIMmwYQYgNwCKlurnIBfXtHTaMlMaNATZwYsNIFzbc6AE2IIuURgIX5hvDZg5u9CI0kgQbbsJhQ13WIqWbwv7XeDMLNowixIZRhrDhlgAbsIN0iwFsuNXn2KDjvpUMG24lxAZgkVKewIbR0rgtwAZObBjtwobbPMAGZJHSaODCfBsJNowmwYbbwdjAWKR0e9j/Gu9gwYYxhNgwxhA23BlgA3aQ7jSADWN9jg067rFk2DCWEBuARUp5AhvGSeOuABs4sWGcCxvu8gAbkEVK44AL810k2DCOBBvuBmMDY5HS3WH/a7yHBRvGE2LDeEPYcG+ADdhButcANtznc2zQcd9Hhg33EWIDsEgpJRe5oL69w4YJ0pgYYAMnNkxwYcNED7ABWaQ0AbgwTwybObjRi9AEEmy4H4cNKaxFSveH/a/xARZsmESIDZMMYcODATZgB+lBA9jwkM+xQcf9EBk2PESIDcAipTyBDZOlMSXABk5smOzChikeYAOySGkycGGeQoINk0mwYSoYGxiLlKaG/a9xGgs2TCfEhumGsOHhABuwg/SwAWx4xOfYoON+hAwbHiHEBmCRUp7AhhnSeDTABk5smOHChkc9wAZkkdIM4ML8KAk2zCDBhsfA2MBYpPRY2P8aZ7JgwyxCbJhlCBtmB9iAHaTZBrDhcZ9jg477cTJseJwQG4BFSqm5yAX17R02PCGNJwNs4MSGJ1zY8KQH2IAsUnoCuDA/GTZzcKMXoSdIsOEpHDakshYpPRX2v8Y5LNgwlxAb5hrChqcDbMAO0tMGsOEZn2ODjvsZMmx4hhAbgEVKeQIb5knj2QAbOLFhngsbnvUAG5BFSvOAC/OzJNgwjwQbngNjA2OR0nNh/2t8ngUb5hNiw3xD2PBCgA3YQXrBADa86HNs0HG/SIYNLxJiA7BIKU9gwwJpLAywgRMbFriwYaEH2IAsUloAXJgXkmDDAhJseAmMDYxFSi+F/a9xEQs2vEyIDS8bwobFATZgB2mxAWxY4nNs0HEvIcOGJYTYACxSSstFLqhv77BhqTReCbCBExuWurDhFQ+wAVmktBS4ML8SNnNwoxehpSTY8CoOG9JYi5ReDftf42ss2PA6ITa8bggb3giwATtIbxjAhmU+xwYd9zIybFhGiA3AIqU8gQ3LpfFmgA2c2LDchQ1veoANyCKl5cCF+U0SbFhOgg1vgbGBsUjprbD/Nb7Ngg3vEGLDO4aw4d0AG7CD9K4BbHjP59ig436PDBveI8QGYJFSnsCGFdJYGWADJzascGHDSg+wAVmktAK4MK8kwYYVJNjwPhgbGIuU3g/7X+MHLNjwISE2fGgIGz4KsAE7SB8ZwIaPfY4NOu6PybDhY0JsABYppeciF9S3d9iwShqrA2zgxIZVLmxY7QE2IIuUVgEX5tVhMwc3ehFaRYINn+CwIZ21SOmTsP81fsqCDZ8RYsNnhrDh8wAbsIP0uQFs+MLn2KDj/oIMG74gxAZgkVKewIYvpbEmwAZObPjShQ1rPMAGZJHSl8CFeQ0JNnxJgg1fgbGBsUjpq7D/Na5lwYavCbHha0PY8E2ADdhB+sYANnzrc2zQcX9Lhg3fEmIDsEgpT2DDd9L4PsAGTmz4zoUN33uADcgipe+AC/P3JNjwHQk2/ADGBsYipR/C/te4jgUb1hNiw3pD2LAhwAbsIG0wgA0/+hwbdNw/kmHDj4TYACxSyshFLqhv77BhozQ2BdjAiQ0bXdiwyQNsQBYpbQQuzJvCZg5u9CK0kQQbfsJhQwZrkdJPYf9r/JkFG34hxIZfDGHD5gAbsIO02QA2/OpzbNBx/0qGDb8SYgOwSClPYMMWaWwNsIETG7a4sGGrB9iALFLaAlyYt5JgwxYSbPgNjA2MRUq/hf2v8XcWbPiDEBv+MIQN2wJswA7SNgPY8KfPsUHH/ScZNvxJiA3AIqU8gQ3bpbEjwAZObNjuwoYdHmADskhpO3Bh3kGCDdtJsGEnGBsYi5R2hv2v8S8WbNhFiA27DGHD3wE2YAfpbwPYsNvn2KDj3k2GDbsJsQFYpNQ+F7mgvr3Dhj3S2BtgAyc27HFhw14PsAFZpLQHuDDvDZs5uNGL0B4SbNATB6PTbs9apITLgTmNoYiZ+QSfUOEIHzaEgcl16o04LncCbIizTz1IOqHofvNFgKupobjzReBjZBQb8gEPKMIipTyBDQmS9PyO5AfYgOnTE2xIiOTEhvwR89iALFJKAC7M+SNmDm70IpQQ8WaBj1dnATA2MBYpFYj4X2NBFmw4jhAbjjOEDYUCbMAOUiED2HC8z7FBx308GTYcT4gNwCKlPIENhSXpRQJs4MSGwi5sKOIBNiCLlAoDF+YiJNhQmAQbTgBjA2OR0gkE2HAiCzYUJcSGooaw4aQAG7CDdJIBbDjZ59ig4z6ZDBtOJsQGYJFSZi5y6bDhFEn6qQE2cGLDKS5sONUDbEAWKZ0CXJhPjZg5uNGL0Ckk2HAaDhsyWYuUTiPAhmIs2FCcEBuKG8KGEgE2YAephAFsKOlzbNBxlyTDhpL/7SKlPIENpSTppQNs4MSGUi5sKE1WpFQKuDCXJsGGUiTYUAaMDYxFSmUi/td4Ogs2lCXEhrKGsOGMABuwg3SGAWwo53Ns0HGXI8OGcv/tIqU8gQ3lJekVAmzgxIbyLmyoQFakVB64MFcgwYbyJNhQEYwNjEVKFQmwoRILNlQmxIbKhrChSoAN2EGqYgAbqvocG3TcVcmwoep/u0ipQy5y6bChmiS9eoANnNhQzYUN1cmKlKoBF+bqETMHN3oRqkaCDTVw2NCBtUipBgE21GTBhlqE2FDLEDbUDrABO0i1DWDDmT7HBh33mWTYcOZ/u0gpT2BDHUl6NMAGTmyo48KGKFmRUh3gwhwlwYY6JNhgg7GBsUjJjvhfYyILNiQRYkOSIWxIDrABO0jJBrChrs+xQcddlwwb6v63i5TyBDakSNJTA2zgxIYUFzakkhUppQAX5lQSbEghwYY0MDYwFimlEWBDOgs2nEWIDWcZwoazA2zADtLZBrDhHJ9jg477HDJsOOe/XaSUlYtcOmyoJ0mvH2ADJzbUc2FDfbIipXrAhbl+xMzBjV6E6pFgw7k4bMhiLVI6lwAbGrBgQ0NCbGhoCBvOC7ABO0jnGcCG832ODTru88mw4fz/dpFSnsCGCyTpFwbYwIkNF7iw4UKyIqULgAvzhSTYcAEJNjQCYwNjkVKjiP81XsSCDRcTYsPFhrDhkgAbsIN0iQFsuNTn2KDjvpQMGy79bxcp5QlsaCxJbxJgAyc2NHZhQxOyIqXGwIW5CQk2NCbBhsvA2MBYpHQZATZczoINVxBiwxWGsKFpgA3YQWpqABuu9Dk26LivJMOGK//bRUrZucilw4ZmkvTmATZwYkMzFzY0JytSagZcmJtHzBzc6EWoGQk2XIXDhmzWIqWrCLDhahZsaEGIDS0MYUPLABuwg9TSADZc43Ns0HFfQ4YN1/y3i5TyBDa0kqS3DrCBExtaubChNVmRUivgwtyaBBtakWDDtWBsYCxSujbif43XsWBDG0JsaGMIG64PsAE7SNcbwIa2PscGHXdbMmxo+98uUsoT2NBOkp4RYAMnNrRzYUMGWZFSO+DCnEGCDe1IsKE9GBsYi5TaE2BDJgs2dIAJbZ9sUmcWTGeK0QM0G6Yzw+iC1xGmMz05dgUS+647PacKKp8lPlt8R/ELrH3+a/F/iD8utM+XFZ8k/mLxbcT3ET9a/GTx88QvF/+l+C3iE8L7fCnxdcRfIL6V+B7ibxb/gPg54l8T/6n4n8WHJL5i4muKbyD+avFvSbzrxe8SX1R0VhZ/lvgrxHcQP1j8OPEzxC8Qv0L8d+K3iy8sOsuLTxHfWHw78f3F3yF+mvjnxb8tfq3438UXlPhOF58o/iLx14n/TOL9RXxY9BUXX0t8Q/EtxHcVP1L8BPFPiF8qfpX4jeL3iD9FdFYTX098M/EdxQ8Vf4/4meIXif9A/Drxf4k/UeKrJD5d/OXiM8WXk+Okk2p3VtZFWVdl3ZR1V9ZDWU9lvZT1VtZHWV9l/ZT1VzZA2UBlg5QNVjZE2Q3Khiobpmy4shHKRiq7UdlNym5WNkrZLcpuVTZaWYK1z/yix3m7RPsyVu6vBuKjcb3qZpvpN8U2029qEle/KXUN6U001G+ymX5NzTNTelNMHRftDfVraJ6lZHHNh5R0M/2aWh+MHRem1jND63pKB0P9GjouEtPM9JucYigPho4LY+tOpqF+DZ0vEtOdd1Rvc9y1Pl68vmscdv1t/B1jO9PEHeMEh1bn3e9YPLG73xHw3/2HJ6SvzJ7de/Xvl9U8q1tWZr+efZzpdj/dDDm2nZfPEUcICa7/6xye2L8VsAw/pbQcgp19x3tf43aSG7l3kOgcQ6LzThKdY0l0jiPReReJzrtJdN5DonM8ic57SXTeR6JzAonOiSQ67yfR+QCJzkkkOh8k0fkQic7JJDqnkOicSqJzGonO6SQ6HybR+QiJzhkkOh8l0fkYic6ZJDpnAXVqbfpebDnpr7iyPcr0PUHt7xA/Rvyd4seKHyf+LvF3i79H/Hjx94q/T/wE8RPF3y/+AfGTxD8o/iHxk8VPET9V/DTx08U/LP4R8TPEPyr+MfEzxc8SX0vZbLX9uNR66NzEbvTG9psc2ydI5uCTJDqfItE5h0TnXBKdT5PofIZE5zwSnc+S6HyOROfzJDrnk+h8gUTniyQ6Fxi4Fi4q/c2Wa8InxD8p/inxc8TPFf+0+GfEzxP/rPjnxD8vfr74F8S/KH6B41p0odp+Sa5FdYFB7Fo0tt9d/+suQEB/SKe4hc137LXIcV1dSLw3NTBR+1jVwOh6lSLS7pWR2bVhn479u2f16NfXmZiIayCd1SrOj5jmc73fmbzYv3lWoRIG970wglsxFgFXjIh1eJ/3jsb3+uezzijNJnXeFuHQuTCCX8W0LyzbL6v+FytbomypsleUvarsNWWvK3tD2TJly5W96ZhAseo15wEdduxzLwYerZBRUytkQUccliveWJVgfuzfzXSW81mufLrz5syn1lpStrN69O6f1T+raf/23TpnNurfI7Nf5549zs/o1s05GWJ/JDYpIrkE6d7vrC8sINsJjn2x/1fA4Y2t6LERindWWxb+uu8twBkhK3vfK5JbEi38qvOWgVVHv9525Dr46p44+9SDpBOK7vcd4CWMqbjficDHyOhp/B3CS7klhi6RwOOWaLDvHF/d864k/T1H8o/kq3v2WgeOlROEw/KeyCHeEzpIP8FX9xz89f+v7tEDuNvaD6bvRQ78o24ejHcBfBe4mK5w9GWnJSUmpibp96V1iNrJHTIT0xITO7RPjmZGMzITs9KT7fTs5MTkpMwOme1Vnxl2djQ7IzM9O21fX15dSawwdCWxMriSwA7SSgNXEu/7/EpCx/2+oSsJNEa8J1rR/X4APkD1Qaj7dMN+BDx2S4BYhVyk3yN5HPEhIZZ+aOhk8lFwMsEO0kcGTiYf+/xkouP+mAxLPybE0qUBlubA0lWS9NUBlnJi6SoXlq72AEtXARfTTwix9BNDVxKfBlcS2EH61MCVxGc+v5LQcX9GgqWrRSu6388NYOnnHmDpUiBWIRfp1SRY+gUhln5h6GTyZXAywQ7SlwZOJmt8fjLRca8hw9I1hFj6SoClObD0K0n62gBLObH0KxeWrvUAS78CLqZfE2Lp14auJL4JriSwg/SNgSuJb31+JaHj/pYES9eKVnS/3xnA0u88wNJXgFiFXKTXkmDp94RY+r2hk8kPwckEO0g/GDiZrPP5yUTHvY4MS9cRYukbAZbmwNL1kvQNAZZyYul6F5Zu8ABL1wMX0x8JsfRHQ1cSG4MrCewgbTRwJbHJ51cSOu5NJFi6QbSi+/3JAJb+5AGWvgHEKuQivYEES38mxNKfDZ1MfglOJthB+sXAyWSzz08mOu7NZFi6mRBLlwVYmgNLf5WkbwmwlBNLf3Vh6RYPsPRX4GK6lRBLtxq6kvgtuJLADtJvBq4kfvf5lYSO+3cSLN0iWtH9/mEAS//wAEuXAbEKuUhvIcHSbYRYus3QyeTP4GSCHaQ/DZxMtvv8ZKLj3k6GpdsJsXR5gKU5sHSHJH1ngKWcWLrDhaU7PcDSHcDF9C9CLP3L0JXEruBKAjtIuwxcSfzt8ysJHfffJFi6U7Si+91tAEt3e4Cly4FYhVykdxq6agqD8xcGzqGXSWK+DTjOi0liRn4H/5se3XKJxveyN5Do3EKi06s1Ld75GQbG/Op/MObXwNcC+uI7dnGu11796zjviV8tfq14/esxe9T23si+r853fm1+bP+h5njc15f5OG4nh0h0hvPh51LsboaeF3sc/nWZQ3oMtQ+JD4s/SVlEbefLt29uFbL2z63YfpO5SCAZs/wkOgsYmFux5SVB5kx+8QXE6/WooNo+TubQ8Y45FNtvMuZCJGNzPInOwgbnUCGZM8eLL+yYQ0XU9gkyhwo75lBsv8mYTyQZm6IkOk8yOIdOlDlTNHYOc8yhk9X2KTKHijjmUGy/yZhPJRmb00h0FjM4h06VOXOa+GKOOVRcbZeQOXSCYw7F9puMuSTJ2JQi0Vna4BwqKXOmlPjSjjlURm2fLnPoRMcciu03GXNZkrE5g0RnOYNzqKzMmTPEl3PMofJqu4LMoaKOORTbbzLmiiRjU4lEZ2WDc6iizJlK4is75lAVtV1V5tBJjjkU228y5mokY1OdRGcNg3OomsyZ6uJrOOZQTbVdS+bQyY45FNtvMubaJGNzJonOOgbnUG2ZM2eKr+OYQ1G1bcscOsUxh2L7TcacSDI2SSQ6kw3OoUSZM0nikx1zqK7aTpE5dKpjDsX2m4w5lWRs0kh0phucQ6kyZ9LEpzvm0Flq+2yZQ6c55lBsv8mYzyEZm3okOusbnEPnyJypJ76+Yw6dq/+uzKFijjkU228y5oYkY3Meic7zDc6hhjJnzhN/vmMOXaC2L5Q5VNwxh2L7TcbciGRsLiLRebHBOdRI5sxF4i92zKFL1PalModKOOZQbL/JmBuTjE0TEp2XGZxDjWXONBF/mWMOXa62r5A5VNIxh2L7TcbclGRsriTR2czgHGoqc+ZK8c0cc6i52r5K5lApxxyK7TcZ89UkY9PCwNjE8ny1jEUL8QWVtVTb18iYlHa8N7bfZKytSMaktcExaSVj0doxJteq7etkTMo43hvbbzLWNiRjcr3BMWkjY3G9Y0zaqu12MianO94b228y1gySMWlvcEwyZCzaO8YkU213kDEp63hvbL/JWLNIxiTb4JhkyVhkO8ako9ruJGNyhuO9sf0mY+1MMiZdDI5JZxmLLo4x6aq2u8mYlHO8N7bfZKzdScakh8Ex6S5j0cMxJj3Vdi8Zk/KO98b2m4y1N8mY9DE4Jr1lLPo4xqSv2u4nY1LB8d7YfpOx9icZkwEGx6S/jMUAx5gMVNuDZEwqOt4b228y1sEkYzLE4JgMlrEY4hiTG9T2UBmTSo73xvabjHUYyZgMNzgmw2QshjvGZITaHiljUtnx3th+k7HeSDImNxkckxtlLG5yjMnNanuUjEkVx3tj+03GegvJmNxqcExukbG41TEmo9X2bTImVR3vje03GevtJGNyh8ExuV3G4g7HmIxR23fKmFRzvDe232SsY0nGZJzBMRkrYzHOMSZ3qe27ZUyqO94b228y1ntIxmS8wTG5R8ZivGNM7lXb98mY1HC8N7bfZKwTSMZkIonO+0l0PkCicxKJzgdJdD5EonMyic4pJDqnkuicRqJzOonOh0l0PkKicwaJzkdJdD5GonMmic5ZJDpnk+h8nETnEyQ6nyTR+RSJzjkkOueS6HyaROczJDrnkeh8lkTncyQ6nyfROZ9E5wskOl8k0bmAROdCEp0vkehcRKLzZRKdi0l0LiHRuZRE5yskOl8l0fkaic7XSXS+QaJzGYnO5SQ63yTR+RaJzrcN1MK0lP4iUgOzUH6jYIK0J4q/X/wDsVoZ8UXEnyy+uPgy4suLryK+pvio+LrizxJ/rvgLxF8i/nLxzcW3FH+t+LbiM8V3FN9VfE/xfcUPFH+D+BHibxY/WvwY8XeJv1f8JPEPin9I/GTxU8RPFT9N/HTxD4t/RPwM8Y+Kf0z8TPGzxM8W/7j4J8Q/Kf4p8XPEzxX/tPhnxM8T/6z458Q/L36++BfEvyh+QWyeiH9J/CLxL4tfLH6J+KXiXxH/qvjXxL8u/g3xy8QvF/+m+LfEvx2bT8reUdvv5ttXs6XbsZqt2H735+f1v+v/u0fm+juxOazsPbW9Qvqq5egrtt/5Q4ral7RyfzUQH43rlZJopt/Uuob6NaQ3JctMv4lpXP0mpxjKb7qhfg3Ns5RMQ/0mm+k30VB+Ew3lIZhn0i/bPAvmw75+g/nwzysxPeToc2W+/dvHi3f+fl3shf81djvdxK+xJzi0On9ZPhZP7Jflwb/pG9WfEzhR+srs2b1X/35ZzbO6ZWX269nHme58Ljkhx7bzsjHiCCHB9X+dwxP7twLW/lT+/9UAE1uOHw1H8+v7JJz9AYnOD0l0fkSi82MSnatIdK4m0fkJic5PSXR+RqLzcxKdX5Do/JJE5xoSnV+R6FxLovNrEp3fkOj8lkTndyQ6vyfR+QOJznUkOteT6NxAovNHEp0bSXRuItH5k4H6iHIOrfoZcQnxpcS/L8+OPxD/ofiPxH8sfpX41eI/Ef+p+M/Efy7+C/Ffil8j/ivxa8V/Lf4b8d+K/0789+J/EL9O/HrxG8T/KH6j+E3ifxKvn4X/rLZ/kWfjta39NyZj+02O7WaSOfgric4tJDq3kuj8jUTn7yQ6/yDRuY1E558kOreT6NxBonMnic6/SHTuItH5t4Fr4aLS389yTbhZ/K/it4jfKv438b+L/0P8NvF/it8ufof4neL/Er9L/N+Oa9HdeluuRc+09l+Lxva76zQjVs4XuBbBDln4eYHWWIJAYykLO29jr70OPikk3pval2jSsap90XUqRaTdKyOza8M+Hft3z+rRr68zMRHXQDqrVJyVKfly2Rd7X+zfPKtMCYP73p0Pt/LuBa68EevAlcs5WKj4i1venNWi8b3slfk4dO7Oh1/FtB8ZE6wO/5CysLKIsnzKEpTlV1ZAWUFlxykrpOx4ZYWVFVF2grITlRVVdpKyk5WdouxUZacpK6asuLISykoqK6WstLIyyk5XVlbZGcrKKSuvrIKyisoqKausrIqyqsqqKauurIaymspqKaut7ExldZTp5ctWlqgsSVmysrrKUpSlKktTlq7sLGVnKztHWT1l9ZWdq6yBsobKzlN2vrILlF2orJGyi5RdrOwSZZcqa6ysibLLlF2u7AplTZVdqayZsubKrlJ2tbIWyloqu0ZZK2WtlV2r7DplbZRdr6ytsnbKMpS1V5aprIOyLGXZyjoq66Sss7Iuyroq66asu7Ieynoq66Wst7I+yvoq66esv7IBygYqG6RssLIhym5QNlTZMGXDlY1I2D9vY1WIzgU67NjnXtw9OuNFTZ3xCjrisFzxxqo980P/blrUWZZpufLpzpszn1rrKbKdmdGtW9M+nQdk9Mtq1L9HZr/OPXs4D+tY9yPFR3IJz73fWSFaQLYTHPti/6+Awxs7N+s/XMcK1qdgfcq5PlkWnmxHJsTfV1b2vlckt4PCwl8PODVH43w59d7oyLV7/dev2IJhYD3OcT2eWx5PsAzDgIlB0glF93tTAm7ym4r7pgT4GBm9wL4pgQ+ywglmcgset0SDfdvOxelmmXOjHHMvdmEXtvYvZPkd4xEbJ73Y7bUOHKuQYzss74kc4j2hg/TjvMCM/f/YBSY4J0Yulo0uvrFbRHoAd1v7bxmNSjjwj7rv1MS7AN4MXExvcfRlpyUlJqYm6feldYjayR0yE9MSEzu0T45mRjMyE7PSk+307OTE5KTMDpntVZ8ZdnY0OyMzPTttX19eXUncYuhK4tbgSgI7SLcauJIY7fMrCR33aENXEmiMGCVa0f3eBj5A9UGo+3TftgF/qDXH1Um8WIVcpEcZumpCj/vthFh6u6GTyR3ByQQ7SHcYOJmM8fnJRMc9hgxLxxBiaSTA0hxYeqfMubEBlnJi6Z0uLB3rAZbeCVxMxxFi6ThDVxJ3BVcS2EG6y8CVxN0+v5LQcd9NgqVjRSu633sMYOk9HmBpBIhVyEV6LAmWjifE0vGGTib3BicT7CDda+Bkcp/PTyY67vvIsPQ+QizNF2BpDiydIHNuYoClnFg6wYWlEz3A0gnAxfR+Qiy939CVxAPBlQR2kB4wcCUxyedXEjruSSRYOlG0ovt90ACWPugBluYDYhVykZ5IgqUPEWLpQ4ZOJpODkwl2kCYbOJlM8fnJRMc9hQxLpxBiacEAS3Ng6VSZc9MCLOXE0qkuLJ3mAZZOBS6m0wmxdLqhK4mHgysJ7CA9bOBK4hGfX0nouB8hwdJpohXd7wwDWDrDAywtCMQq5CI9jQRLHyXE0kcNnUweC04m2EF6zMDJZKbPTyY67plkWDqTEEuPC7A0B5bOkjk3O8BSTiyd5cLS2R5g6SzgYvo4IZY+buhK4ongSgI7SE8YuJJ40udXEjruJ0mwdLZoRff7lAEsfcoDLD0OiFXIRXo2CZbOIcTSOYZOJnODkwl2kOYaOJk87fOTiY77aTIsfZoQSwsFWJoDS5+ROTcvwFJOLH3GhaXzPMDSZ4CL6bOEWPqsoSuJ54IrCewgPWfgSuJ5n19J6LifJ8HSeaIV3e98A1g63wMsLQTEKuQiPY8ES18gxNIXDJ1MXgxOJthBetHAyWSBz08mOu4FZFi6gBBLRwRYmgNLF8qceynAUk4sXejC0pc8wNKFwMV0ESGWLjJ0JfFycCWBHaSXDVxJLPb5lYSOezEJlr4kWtH9LjGApUs8wNIRQKxCLtIvGbpqCoPzVxw4hyySmFcCf8AwRBIz8kcbj/folks0vpf9EonOaSQ6Z5PonOfRMRnvcRQGxpxAEjPwx1Pt/OBrFg0JMYhYKT+frb9RX/ux4ieK1z+LvFRtv5Kw75cEo45cxfYfao7Hm8dXSW57v0ai83UDcyl210XPCz1niosvIHPoVfGviX9d/EnK3lDby2Ru2db+uRXb7/4bA+X/DhI/WPwQ8TeIHyq+sLLlavtN+RuJjr8R2x/7G70cf1v/391ybBSWdhHxJ4g/UXzRWDziTxZ/ivhTxZ8mvpj44uJLiC8pvpT40uLLiD9dfFnxZ4gvJ768+AriK4qvJL6y+Criq4qvJr66+Bria4qvJb62+DPF1xEfFW+LTxSfJD5ZfF3xKeJTxaeJTxd/lvizxZ8jvp74+uLPFd9AfEPx54k/X/wF4i8U30j8ReIvFn+J+EvFNxbfRPxl4i8Xf4X4puKvFN9MfHPxV4m/WnwL8S3FXyO+lfjW4q8Vf534NuKvF99WfDvxGeLbi88U30F8lvhs8R3FdxLfWXwX8V3FdxPfXXwP8T3F9xLfW3wf8X3F9xPfX/wA8cvFDxM/PDb/lL2ltt+WYzbJcczG9seO2Rhnx9acpdLHW7FjUdk7avtd6SvZ0Vdsv/OFXm/fSzBzIw6tc0UCx/lrJYnO90l0fkCi80MSnR+R6PyYROcqEp2rSXR+QqLzUxKdn5Ho/JxE5xckOr8k0bmGROdXJDrXkuj8mkTnNyQ6vyXR+R2Jzu9JdP5AonMdic71JDo3kOj8kUTnRhKdm0h0/kSi82cSnb+Q6NxMovNXEp1bSHRuJdH5G4nO30l0/kGicxuJzj9JdG4n0bmDROdOEp1/kejcRaLzbxKdu0l07iHRuZdEpy5iYdAZItEZJtEZIdGZj0RnAonO/CQ6C5DoLEii8zgSnYVIdB5PorMwic4iJDpPINF5IonOoiQ6TyLReTKJzlNIdJ5KovM0Ep3FSHQWJ9FZgkRnSRKdpUh0libRWYZE5+kkOsuS6DyDRGc5Ep3lSXRWINFZkURnJRKdlQ3pPOB7rOxoXK9OkRw64+qtcwSXv8wCHuUvGl/UXSIH6Dzq3roC89fBy/xFjz7qbpFcdR5Vb92B+cvyOn/Ro4u6R+SgOo+4t57A/GUfi/xFjzzqXpFD6jyi3noD89fxWOUvemRR94n8q87D7q0vMH+djmX+oocfdb/IYek8rN76A/PX+VjnL3p4UQ+IHLbOf+1tIDB/XfyQv+i/Rz0ockQ6D9nbYGD+uvolf9FDRz0kcsQ6D9rbDcD8dfNT/qIHj3po5Kh05trbMGD+uvstf9Hcox4eOWqdB/Q2Api/Hn7MX/TAqEdG4tKZo7cbgfnr6df8RXNGfVMkbp3/7+1mYP56+Tl/0f1Rj4pAdP7T2y3A/PX2e/6i+6K+NQLTaY8G5q8PQ/5UzMD7bLbznlO8+etLkj/gfSI7G5i/fiT5A97nsDsB89efJH9ATre7APM3gCR/QM60uwHzN5Akf0BOsnsA8zeIJH/A63y7FzB/g0nyB7xOtfsA8zeEJH/A6yy7HzB/N5DkD3idYA8A5m8oSf6A5zl7EDB/w0jyB1yn7SHA/A0nyR9wnbGHAvM3giR/wOPEHg7M30iP8hevziq4OjEbOGdsU/lD19lVJakHrEaiszqJzhokOmuS6KxForO2IZ1hl85ofK9/fvQbFfOZJDGHgTHXIYk5Aow5ShJzPmDMNknMCcCYE0lizg+MOYkk5ouAMSeTxOz8TbR4Y65LEvMKYMwpJDGvBMacShLz+8CY00hi/gAYczpJzB8CYz6LJOaPgDGfTRLzx8CYzyGJeRUw5nokMa8GxlyfJOZPgDGfSxLzp8CYG5DE/Bkw5oYkMX8OjPk8kpi/AMZ8PknMXwJjvoAk5jXAmC8kifkrYMyNSGJeC4z5IpKYvwbGfDFJzN8AY76EJOZvgTFfShLzd8CYG5PE/D0w5iYkMf8AjPkykpjXAWO+nCTm9cCYryCJeQMw5qYkMf8IjPlKkpg3AmNuRhLzJmDMzUli/gkY81UkMf8MjPlqkph/AcbcgiTmzcCYW5LE/Csw5mtIYt4CjLkVScxbgTG3Jon5N2DM15LE/Dsw5utIYv4DGHMbkpi3AWO+niTmP4ExtyWJeTsw5nYkMe8AxpxBEvNOYMztSWL+CxhzJknMu4AxdyCJ+W9gzFkkMe8GxpxNEvMeYMwdSWLeC4y5E0nMzt8gj/t7vFk+LwmMuQvL5yWBMXdl+bwkMOZuLJ+XBMbcneXzksCYe7B8XhIYc0+SmAsAY+5FEnNBYMy9SWI+DhhzH5KYCwFj7ksS8/HAmPuRxFwYGHN/kpiLAGMeQBLzCcCYB5LEfCIw5kEkMRcFxjyYJOaTgDEPIYn5ZGDMN5DEfAow5qEkMZ8KjHkYScynAWMeThJzMWDMI0hiLg6MeSRJzCWAMd9IEnNJYMw3kcRcChjzzSQxlwbGPIok5jLAmG8hifl0YMy3ksRcFhjzaJKYzwDGfBtJzO8An7nfThJzOeA430ESc3lgzGNIYq4AjPlOlu/3zIeLeSxJzBWB4zyOJOZKwJjvIom5MjDmu0lirgKM+R6SmKsCYx5PEnM1YMz3ksRcHRjzfSQx1wDGPIEk5prAmCeSxFwLGPP9JDHXBsb8AEtNnIWLeRJLTRww5gdZauKAMT/EUhMHjHkyS00cMOYpLDVxwJinstTEAWOexlITB4x5OktNHDDmh1lq4oAxP8JSEweMeQZLTRww5kdZauKAMT/GUhMHjHkmS00cMOZZwJhLST8hiVn/JqT+jUT9m4Hqz1iaBzUfaV7Q18/6elJfX+nrDX3+1ecjvT7r9Uofv3o+6/HV8RZTVlxZCWUllZVy5HeIeP37oPr3MvXvR+of7dO/L6h/b0///pz+PTb9+2T697r071fp33PSv2+kf+9H//6N/j0Y/fso//xeiDL9exL69xX07w3o79/X30evv59df1+5/v5u/X3W+vud9fcd6+//1d+Hq78fVn9fqv7+UP19mvr7JfX3LervH9Tfx6e/n05/X5v+/jL9fV76+6309z3p7z/S3wekvx9Hf1+M/v4U/X0i+vs19PdN6O9f0N9HoD+frz+vrj+/rT/PrD/fqz/vqj//qT8PqT8fqD8vpz8/pj9PpT9fpD9voz9/oj+PoT+foOv1df26rufW9c263lfXv+p6UF0fqesFdf2crifT9VW63kjX3+h6FF2foesV9PN7/TxbP9/Vzzv18z/9PEw/H9LPS/TzA30/Xd9f1vdb9f1HfT9O35/S92v0/QvN85pvNe9p/tE8oK+P9fWivn7S1xP6/KrPN3r91euRPj71fI29/ge3JXp3gugHAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "exit_to_l1_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "recipient",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "callerOnL1",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::EthereumAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_token",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "token",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcKA/RxH8/vUG9Qc/gDZrY+Gmi3j+WyKQjoj+FTZqlQGdmZ7daRJS8o5Ml1I/1MWVHe0PK/cpwxFUL084YNmEF0qxT3qdadF3e067gnyOPa/FwbxhXiCvIZw+x12VeBFrjLHp3oHNT+AZ3TeEe124b1M48A72Da0saDGlxdbX0EcPLEh1xQQc0efLJZ3q5B55yi9lp0RPuPeLfjIJ/Mz/4Zx7P2328TudpvCiCyEdKEwyveexhP48m7uLMy7fEan7kuCrLMV4lLa+7hAUAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "",
      "",
      "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
      "",
      "",
      "",
      "eJzNlM0KgzAQBt9lz6FkN/95ldKDtBYE0VK9Sd5dS1UKpngR2VsC88Eckhmgbu9FX7VNB3EAeTEQrwN0r6L53Lu+ePcQLQYvoGwe05HQJwHPqi4hYhIbFmUIM4vo5Mo6nYGVo5nVqFbUmnQTk4tl5OIYuXhGLoGRC0pOMshJhjjJKE4ympMMp/oip/wip/4ipwDjuQXWuLBa+V+ZLUpoZ5TIrKhXX286N9bHeZ/b9eO8s22ZXJeNMZu3RdkE7GyyP3Vnk/1QO5vsu/+/SWkEDUosfQ=="
    ],
    "fileMap": {
      "1": {
        "source": "mod util;\nmod token_interface;\n\n// Minimal implementation of the token bridge that can move funds between L1 <> L2.\n// The bridge has a corresponding Portal contract on L1 that it is attached to \n// And corresponds to a Token on L2 that uses the `AuthWit` accounts pattern.\n// Bridge has to be set as a minter on the token before it can be used\n\ncontract TokenBridge {\n    use dep::aztec::{\n        context::{Context},\n        state_vars::{public_state::PublicState},\n        types::type_serialization::field_serialization::{\n            FieldSerializationMethods, FIELD_SERIALIZED_LEN,\n        },\n        types::address::{AztecAddress, EthereumAddress},\n        oracle::compute_selector::compute_selector,\n    };\n\n    use crate::token_interface::Token;\n    use crate::util::{get_mint_public_content_hash, get_mint_private_content_hash, get_withdraw_content_hash, compute_secret_hash};\n\n    // Storage structure, containing all storage, and specifying what slots they use.\n    struct Storage {\n        token: PublicState<Field, 1>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                token: PublicState::new(\n                    context,\n                    1,\n                    FieldSerializationMethods,\n                ),\n            }\n        }\n    }\n\n    // Constructs the contract.\n    #[aztec(private)]\n    fn constructor() {\n        // Currently not possible to execute public calls from constructor as code not yet available to sequencer.\n        // let selector = compute_selector(\"_initialize((Field))\");\n        // let _callStackItem = context.call_public_function(context.this_address(), selector, [context.msg_sender()]);\n    }\n\n    // docs:start:claim_public\n    // Consumes a L1->L2 message and calls the token contract to mint the appropriate amount publicly\n    #[aztec(public)]\n    fn claim_public(\n        to: AztecAddress,\n        amount: Field,\n        canceller: EthereumAddress,\n        msg_key: Field,\n        secret: Field,\n    ) -> Field {\n        let content_hash = get_mint_public_content_hash(to.address, amount, canceller.address);\n        // Consume message and emit nullifier\n        context.consume_l1_to_l2_message(msg_key, content_hash, secret);\n\n        // Mint tokens \n        Token::at(storage.token.read()).mint_public(context, to.address, amount);\n\n        1\n    }\n    // docs:end:claim_public\n\n    // docs:start:exit_to_l1_public\n    // Burns the appropriate amount of tokens and creates a L2 to L1 withdraw message publicly\n    // Requires `msg.sender` to give approval to the bridge to burn tokens on their behalf using witness signatures \n    #[aztec(public)]\n    fn exit_to_l1_public(\n        recipient: EthereumAddress, // ethereum address to withdraw to\n        amount: Field,\n        callerOnL1: EthereumAddress, // ethereum address that can call this function on the L1 portal (0x0 if anyone can call)\n        nonce: Field, // nonce used in the approval message by `msg.sender` to let bridge burn their tokens on L2\n    ) -> Field {\n        // Send an L2 to L1 message\n        let content = get_withdraw_content_hash(recipient.address, amount, callerOnL1.address);\n        context.message_portal(content);     \n\n        // Burn tokens \n        Token::at(storage.token.read()).burn_public(context, context.msg_sender(), amount, nonce);\n   \n        1\n    }\n    // docs:end:exit_to_l1_public\n\n    // Consumes a L1->L2 message and calls the token contract to mint the appropriate amount in private assets\n    // User needs to call token.redeem_shield() to get the private assets\n    #[aztec(private)]\n    fn claim_private(\n        amount: Field,\n        secret_hash_for_redeeming_minted_notes: Field, // secret hash used to redeem minted notes at a later time. This enables anyone to call this function and mint tokens to a user on their behalf\n        canceller: EthereumAddress,\n        msg_key: Field, // L1 to L2 message key as derived from the inbox contract\n        secret_for_L1_to_L2_message_consumption: Field, // secret used to consume the L1 to L2 message\n    ) -> Field {\n        // Consume L1 to L2 message and emit nullifier\n        let content_hash = get_mint_private_content_hash(amount, secret_hash_for_redeeming_minted_notes, canceller.address);\n        context.consume_l1_to_l2_message(msg_key, content_hash, secret_for_L1_to_L2_message_consumption);\n\n        // Mint tokens on L2 \n        // `mint_private` on token is public. So we call an internal public function \n        // which then calls the public method on the token contract.\n        // Since the secret_hash is passed, no secret is leaked. \n        context.call_public_function(\n            context.this_address(),\n            compute_selector(\"_call_mint_on_token(Field,Field)\"),\n            [amount, secret_hash_for_redeeming_minted_notes],\n        );\n\n        1\n    }\n\n    // docs:start:exit_to_l1_private\n    // Burns the appropriate amount of tokens and creates a L2 to L1 withdraw message privately\n    // Requires `msg.sender` (caller of the method) to give approval to the bridge to burn tokens on their behalf using witness signatures \n    #[aztec(private)]\n    fn exit_to_l1_private(\n        recipient: EthereumAddress, // ethereum address to withdraw to\n        token: AztecAddress,\n        amount: Field,\n        callerOnL1: EthereumAddress, // ethereum address that can call this function on the L1 portal (0x0 if anyone can call)\n        nonce: Field, // nonce used in the approval message by `msg.sender` to let bridge burn their tokens on L2\n    ) -> Field {\n        // Send an L2 to L1 message\n        let content = get_withdraw_content_hash(recipient.address, amount, callerOnL1.address);\n        context.message_portal(content);\n\n        // Assert that user provided token address is same as seen in storage. \n        context.call_public_function(context.this_address(), compute_selector(\"_assert_token_is_same(Field)\"), [token.address]);\n\n        // Burn tokens\n        Token::at(token.address).burn(&mut context, context.msg_sender(), amount, nonce);\n\n        1\n    }\n    /// docs:end:exit_to_l1_private\n    \n    // /// Unconstrained /// \n\n    unconstrained fn token() -> Field {\n        storage.token.read()\n    }\n\n    // Since unconstrained functions can't be called by external contracts, this is a public function that can be called by other contracts.\n    #[aztec(public)]\n    fn get_token() -> Field {\n        // TODO: Figure out how to call unconstrained fn `token()` from here.\n        storage.token.read()\n        \n    }\n\n    /// SHOULD BE Internal ///\n\n    // We cannot do this from the constructor currently \n    // Since this should be internal, for now, we ignore the safety checks of it, as they are \n    // enforced by it being internal and only called from the constructor.\n    #[aztec(public)]\n    fn _initialize(token: AztecAddress) {\n        storage.token.write(token.address);\n    }\n\n    // This is a public call as we need to read from public storage.\n    // Also, note that user hashes their secret in private and only sends the hash in public\n    // meaning only user can `redeem_shield` at a later time with their secret.\n    #[aztec(public)]\n    internal fn _call_mint_on_token(amount: Field, secret_hash: Field){\n        Token::at(storage.token.read()).mint_private(context, amount, secret_hash);\n    }\n\n    #[aztec(public)]\n    internal fn _assert_token_is_same(token: Field) {\n        assert(storage.token.read() == token, \"Token address is not the same as seen in storage\");\n    }\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/noir-contracts/src/contracts/token_bridge_contract/src/main"
      },
      "20": {
        "source": "\nimpl Field {\n    #[builtin(to_le_bits)]\n    fn to_le_bits(_x : Field, _bit_size: u32) -> [u1] {}\n    #[builtin(to_be_bits)]\n    fn to_be_bits(_x : Field, _bit_size: u32) -> [u1] {}\n\n    fn to_le_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_le_radix(256, byte_size)\n    }\n    fn to_be_bytes(x : Field, byte_size: u32) -> [u8] {\n        x.to_be_radix(256, byte_size)\n    }\n\n    #[builtin(to_le_radix)]\n    //decompose _x into a _result_len vector over the _radix basis\n    //_radix must be less than 256\n    fn to_le_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n    #[builtin(to_be_radix)]\n    fn to_be_radix(_x : Field, _radix: u32, _result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\nfn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\nfn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\nfn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\nfn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\nfn modulus_le_bytes() -> [u8] {}\n",
        "path": "std/field"
      },
      "33": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n\n    // TODO: include globals in here and check them elsewhere\n    // https://github.com/AztecProtocol/aztec-packages/issues/1567\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        // We do not include block_data since it's not in the cpp hash\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize()); // see https://github.com/AztecProtocol/aztec-packages/issues/1473\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\nfn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/abi"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        self.nullified_commitments.push(nullified_commitment);\n    }\n\n    // docs:start:context_message_portal\n    fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    \n                    is_delegate_call : fields[8] as bool,\n                    is_static_call : fields[9] as bool,\n                    is_contract_deployment: fields[10] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[11],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 12),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 16),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 48),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 64),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 80),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 96),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 100),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 104),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 106),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 108),\n                encrypted_log_preimages_length: fields[110],\n                unencrypted_log_preimages_length: fields[111],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    private_data_tree_root : fields[112],\n                    nullifier_tree_root : fields[113],\n                    contract_tree_root : fields[114],\n                    l1_to_l2_messages_tree_root : fields[115],\n                    blocks_tree_root : fields[116],\n                    public_data_tree_root: fields[117],\n                    global_variables_hash: fields[118],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[119], fields[120]),\n                    constructor_vk_hash : fields[121],\n                    function_tree_root : fields[122],\n                    contract_address_salt : fields[123],\n                    portal_contract_address : fields[124],\n                },\n                chain_id: fields[125],\n                version: fields[126],\n            },\n            is_execution_request: fields[127] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    \n                    is_delegate_call : fields[8] as bool,\n                    is_static_call : fields[9] as bool,\n                    is_contract_deployment: fields[10] as bool,\n                },\n                args_hash: fields[11],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/context"
      },
      "41": {
        "source": "mod l1_to_l2_message;\nmod l1_to_l2_message_getter_data;\n\nuse l1_to_l2_message_getter_data::make_l1_to_l2_message_getter_data;\n\nuse crate::abi::PublicContextInputs;\nuse crate::oracle::get_l1_to_l2_message::get_l1_to_l2_message_call;\n\n\n// Returns the nullifier for the message\nfn process_l1_to_l2_message(l1_to_l2_root: Field, storage_contract_address: Field, msg_key: Field, content: Field, secret: Field) -> Field{\n\n    let returned_message = get_l1_to_l2_message_call(msg_key);\n    let l1_to_l2_message_data = make_l1_to_l2_message_getter_data(returned_message, 0, secret);\n\n    // Check tree roots against the inputs \n    assert(l1_to_l2_message_data.root == l1_to_l2_root);\n\n    // Validate this is the target contract\n    assert(l1_to_l2_message_data.message.recipient == storage_contract_address);\n\n    // Validate the message hash is correct\n    assert(l1_to_l2_message_data.message.content == content);\n\n    // Validate the message secret is correct\n    l1_to_l2_message_data.message.validate_message_secret();\n\n    // Compute Nullifier\n    l1_to_l2_message_data.message.compute_nullifier()\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/messaging"
      },
      "42": {
        "source": "use crate::constants_gen::{\n    L1_TO_L2_MESSAGE_LENGTH,\n    GENERATOR_INDEX__NULLIFIER,\n    GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\nstruct L1ToL2Message {\n    sender: Field,\n    chainId: Field,\n    recipient: Field,\n    version: Field,\n    content: Field,\n    secret: Field,\n    secret_hash: Field,\n    deadline: u32,\n    fee: u64,\n    tree_index: Field\n}\n\nimpl L1ToL2Message {\n    fn deserialize(\n        fields: [Field; L1_TO_L2_MESSAGE_LENGTH],\n        secret: Field,\n        tree_index: Field\n    ) -> L1ToL2Message {\n        L1ToL2Message {\n            sender: fields[0],\n            chainId: fields[1],\n            recipient: fields[2],\n            version: fields[3],\n            content: fields[4],\n            secret: secret,\n            secret_hash: fields[5],\n            deadline: fields[6] as u32,\n            fee: fields[7] as u64,\n            tree_index: tree_index\n        }\n    }\n\n    fn validate_message_secret(self: Self) {\n        let recomputed_hash = dep::std::hash::pedersen_with_separator([self.secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)[0];\n        assert(self.secret_hash == recomputed_hash);\n    }\n\n    fn message_hash(self: Self) -> Field {\n        let mut hash_bytes: [u8; 256] = [0; 256];\n        let sender_bytes = self.sender.to_be_bytes(32);\n        let chainId_bytes = self.chainId.to_be_bytes(32);\n        let recipient_bytes = self.recipient.to_be_bytes(32);\n        let version_bytes = self.version.to_be_bytes(32);\n        let content_bytes = self.content.to_be_bytes(32);\n        let secret_hash_bytes = self.secret_hash.to_be_bytes(32);\n        let deadline_bytes = (self.deadline as Field).to_be_bytes(32);\n        let fee_bytes = (self.fee as Field).to_be_bytes(32);\n\n        for i in 0..32 {\n            hash_bytes[i] = sender_bytes[i];\n            hash_bytes[i + 32] = chainId_bytes[i];\n            hash_bytes[i + 64] = recipient_bytes[i];\n            hash_bytes[i + 96] = version_bytes[i];\n            hash_bytes[i + 128] = content_bytes[i];\n            hash_bytes[i + 160] = secret_hash_bytes[i];\n            hash_bytes[i + 192] = deadline_bytes[i];\n            hash_bytes[i + 224] = fee_bytes[i];\n        }\n\n        let message_sha256 = dep::std::hash::sha256(hash_bytes);\n\n        // Convert the message_sha256 to a field element\n        let mut v = 1;\n        let mut high = 0 as Field;\n        let mut low = 0 as Field;\n\n        for i in 0..16 {\n            high = high + (message_sha256[15 - i] as Field) * v;\n            low = low + (message_sha256[16 + 15 - i] as Field) * v;\n            v = v * 256;\n        }\n\n        let message_hash = low + high * v;\n        message_hash        \n    }\n\n    // The nullifier of a l1 to l2 message is the hash of the message salted with the secret and tree index\n    // docs:start:l1_to_l2_message_compute_nullifier\n    fn compute_nullifier(self: Self) -> Field {\n        let message_hash = self.message_hash();\n        dep::std::hash::pedersen_with_separator([message_hash, self.secret, self.tree_index], GENERATOR_INDEX__NULLIFIER)[0]\n    }\n    // docs:end:l1_to_l2_message_compute_nullifier\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/messaging/l1_to_l2_message"
      },
      "43": {
        "source": "use crate::messaging::l1_to_l2_message::L1ToL2Message;\nuse crate::constants_gen::{\n    L1_TO_L2_MSG_TREE_HEIGHT,\n    L1_TO_L2_MESSAGE_LENGTH,\n};\nuse crate::utils::arr_copy_slice;\n\nstruct L1ToL2MessageGetterData {\n    message: L1ToL2Message,\n    sibling_path: [Field; L1_TO_L2_MSG_TREE_HEIGHT],\n    leaf_index: Field,\n    root: Field,\n}\n\nfn l1_to_l2_message_getter_len() -> Field {\n    L1_TO_L2_MESSAGE_LENGTH + 1 + L1_TO_L2_MSG_TREE_HEIGHT + 1\n}\n\nfn make_l1_to_l2_message_getter_data<N>(fields: [Field; N], start: Field, secret: Field) -> L1ToL2MessageGetterData {\n    L1ToL2MessageGetterData {\n        message: L1ToL2Message::deserialize(arr_copy_slice(fields, [0; L1_TO_L2_MESSAGE_LENGTH], start), secret, fields[start + L1_TO_L2_MESSAGE_LENGTH]),\n        leaf_index: fields[start + L1_TO_L2_MESSAGE_LENGTH],\n        sibling_path: arr_copy_slice(fields, [0; L1_TO_L2_MSG_TREE_HEIGHT], L1_TO_L2_MESSAGE_LENGTH + 1),\n        root: fields[start + L1_TO_L2_MESSAGE_LENGTH + L1_TO_L2_MSG_TREE_HEIGHT + 1],\n    }\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/messaging/l1_to_l2_message_getter_data"
      },
      "54": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/arguments"
      },
      "55": {
        "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/call_private_function"
      },
      "58": {
        "source": "\nuse crate::constants_gen::L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH;\n\n// Checks if a msg is within the l1ToL2Msg tree\n#[oracle(getL1ToL2Message)]\nfn get_l1_to_l2_msg_oracle(_msg_key: Field) -> [Field; L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH] {}\n\nunconstrained fn get_l1_to_l2_message_call(msg_key: Field) -> [Field; L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH] {\n    get_l1_to_l2_msg_oracle(msg_key)\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/get_l1_to_l2_message"
      },
      "62": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 6\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 12;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call"
      },
      "63": {
        "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/public_call"
      },
      "65": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\nfn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/storage"
      },
      "67": {
        "source": "#[oracle(computeSelector)]\nfn compute_selector_oracle<T>(_selector: T, _size: Field) -> Field {}\n\nunconstrained fn compute_selector<T>(signature: T) -> Field {\n  compute_selector_oracle(signature, 0)\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/oracle/compute_selector"
      },
      "69": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/private_call_stack_item"
      },
      "70": {
        "source": "use crate::{\n    abi,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}\n\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/public_call_stack_item"
      },
      "74": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        _: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    fn read(self) -> T {\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    fn write(self, value: T) {\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/state_vars/public_state"
      },
      "80": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/types/vec"
      },
      "83": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/types/type_serialization/field_serialization"
      },
      "85": {
        "source": "fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/aztec-nr/aztec/src/utils"
      },
      "86": {
        "source": "use dep::std::hash::{pedersen_with_separator, sha256};\nuse dep::aztec::constants_gen::{\n    GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n    GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\nfn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_with_separator([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)[0]\n}\n\n// Computes a content hash of a deposit/mint_private message.\n// Refer TokenPortal.sol for reference on L1.\nfn get_mint_private_content_hash(amount: Field, secret_hash_for_redeeming_minted_notes: Field, canceller: Field) -> Field {\n    let mut hash_bytes: [u8; 100] = [0; 100];\n    let amount_bytes = amount.to_be_bytes(32);\n    let secret_hash_bytes = secret_hash_for_redeeming_minted_notes.to_be_bytes(32);\n    let canceller_bytes = canceller.to_be_bytes(32);\n\n    for i in 0..32 {\n        hash_bytes[i + 4] = amount_bytes[i];\n        hash_bytes[i + 36] = secret_hash_bytes[i];\n        hash_bytes[i + 68] = canceller_bytes[i];\n    }\n\n    // Function selector: 0x25d46b0f keccak256('mint_private(uint256,bytes32,address)')\n    hash_bytes[0] = 0x25;\n    hash_bytes[1] = 0xd4;\n    hash_bytes[2] = 0x6b;\n    hash_bytes[3] = 0x0f;\n\n    let content_sha256 = sha256(hash_bytes);\n\n    // // Convert the content_sha256 to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (content_sha256[15 - i] as Field) * v;\n        low = low + (content_sha256[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let content_hash = low + high * v;\n    content_hash\n}\n\n// Computes a content hash of a deposit/mint_public message.\n// Refer TokenPortal.sol for reference on L1.\nfn get_mint_public_content_hash(owner_address: Field, amount: Field, canceller: Field) -> Field {\n    let mut hash_bytes: [u8; 100] = [0; 100];\n    let amount_bytes = amount.to_be_bytes(32);\n    let recipient_bytes = owner_address.to_be_bytes(32);\n    let canceller_bytes = canceller.to_be_bytes(32);\n\n    for i in 0..32 {\n        hash_bytes[i + 4] = amount_bytes[i];\n        hash_bytes[i + 36] = recipient_bytes[i];\n        hash_bytes[i + 68] = canceller_bytes[i];\n    }\n\n    // Function selector: 0x63c9440d keccak256('mint_public(uint256,bytes32,address)')\n    hash_bytes[0] = 0x63;\n    hash_bytes[1] = 0xc9;\n    hash_bytes[2] = 0x44;\n    hash_bytes[3] = 0x0d;\n\n    let content_sha256 = sha256(hash_bytes);\n\n    // // Convert the content_sha256 to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (content_sha256[15 - i] as Field) * v;\n        low = low + (content_sha256[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let content_hash = low + high * v;\n    content_hash\n}\n\n// Computes a content hash of a withdraw message.\nfn get_withdraw_content_hash(recipient: Field, amount: Field, callerOnL1: Field) -> Field {\n    // Compute the content hash\n    // Compute sha256(selector || amount || recipient)\n    // then convert to a single field element\n    // add that to the l2 to l1 messages\n    let mut hash_bytes: [u8; 100] = [0; 100];\n    let amount_bytes = amount.to_be_bytes(32);\n    let recipient_bytes = recipient.to_be_bytes(32);\n    let callerOnL1_bytes = callerOnL1.to_be_bytes(32);\n\n    //  0xb460af94, selector for \"withdraw(uint256,address,address)\"\n    hash_bytes[0] = 0xb4;\n    hash_bytes[1] = 0x60;\n    hash_bytes[2] = 0xaf;\n    hash_bytes[3] = 0x94;\n\n    for i in 0..32 {\n        hash_bytes[i + 4] = amount_bytes[i];\n        hash_bytes[i + 36] = recipient_bytes[i];\n        hash_bytes[i + 68] = callerOnL1_bytes[i];\n    }\n    let content_sha256 = sha256(hash_bytes);\n\n    // Convert the content_sha256 to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (content_sha256[15 - i] as Field) * v;\n        low = low + (content_sha256[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let content = low + high * v;\n    content\n}",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/noir-contracts/src/contracts/token_bridge_contract/src/util"
      },
      "87": {
        "source": "use dep::aztec::{\n  context::{ PrivateContext, PublicContext, Context },\n  oracle::compute_selector::compute_selector,\n};\n\nstruct Token {\n  address: Field,\n}\n\nimpl Token {\n  fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  fn mint_public(self: Self, context: PublicContext, to: Field, amount: Field) {\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"mint_public((Field),Field)\"),\n      [to, amount]\n    );\n  }\n\n  // docs:start:public_burn_interface\n  fn burn_public(self: Self, context: PublicContext, from: Field, amount: Field, nonce: Field) {\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"burn_public((Field),Field,Field)\"),\n      [from, amount, nonce]\n    );\n  }\n  // docs:end:public_burn_interface\n\n  fn mint_private(self: Self, context: PublicContext, amount: Field, secret_hash: Field) {\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"mint_private(Field,Field)\"),\n      [amount, secret_hash]\n    );\n  }\n\n\n  // docs:start:private_burn_interface\n  fn burn(self: Self, context: &mut PrivateContext, from: Field, amount: Field, nonce: Field) {\n    let _return_values = context.call_private_function(\n      self.address,\n      compute_selector(\"burn((Field),Field,Field)\"),\n      [from, amount, nonce]\n    );\n  }\n  // docs:end:private_burn_interface\n}\n",
        "path": "/mnt/user-data/sean/docs/aztec3-packages/yarn-project/noir-contracts/src/contracts/token_bridge_contract/src/token_interface"
      }
    }
  }
}
